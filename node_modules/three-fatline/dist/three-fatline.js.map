{"version":3,"file":"three-fatline.js","sources":["../src/LineSegmentsGeometry.js","../src/LineMaterial.js","../src/LineSegments2.js","../src/LineGeometry.js","../src/Line2.js"],"sourcesContent":["import {\n\tBox3,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n} from 'three';\n\nconst THREE = window.THREE\n\t? window.THREE // Prefer consumption from global THREE, if exists\n\t: {\n\tBox3,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n};\n\n// support multiple method names for backwards threejs compatibility\nvar setAttributeFn = new THREE.BufferGeometry().setAttribute ? 'setAttribute' : 'addAttribute';\n\nconst _box = new THREE.Box3();\n\nconst _vector = new THREE.Vector3();\n\nclass LineSegmentsGeometry extends THREE.InstancedBufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis.type = 'LineSegmentsGeometry';\n\t\tconst positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\t\tconst uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\n\t\tconst index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\n\t\tthis.setIndex( index );\n\t\tthis[setAttributeFn]( 'position', new THREE.Float32BufferAttribute( positions, 3 ) );\n\t\tthis[setAttributeFn]( 'uv', new THREE.Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst start = this.attributes.instanceStart;\n\t\tconst end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined ) {\n\n\t\t\tstart.applyMatrix4( matrix );\n\t\t\tend.applyMatrix4( matrix );\n\t\t\tstart.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetPositions( array ) {\n\n\t\tlet lineSegments;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tlineSegments = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tlineSegments = new Float32Array( array );\n\n\t\t}\n\n\t\tconst instanceBuffer = new THREE.InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\n\n\t\tthis[setAttributeFn]( 'instanceStart', new THREE.InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\n\n\t\tthis[setAttributeFn]( 'instanceEnd', new THREE.InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\n\t\t//\n\n\t\tthis.computeBoundingBox();\n\t\tthis.computeBoundingSphere();\n\t\treturn this;\n\n\t}\n\n\tsetColors( array ) {\n\n\t\tlet colors;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tcolors = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tcolors = new Float32Array( array );\n\n\t\t}\n\n\t\tconst instanceColorBuffer = new THREE.InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\n\n\t\tthis[setAttributeFn]( 'instanceColorStart', new THREE.InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\n\n\t\tthis[setAttributeFn]( 'instanceColorEnd', new THREE.InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\n\n\t\treturn this;\n\n\t}\n\n\tfromWireframeGeometry( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\t\treturn this;\n\n\t}\n\n\tfromEdgesGeometry( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\t\treturn this;\n\n\t}\n\n\tfromMesh( mesh ) {\n\n\t\tthis.fromWireframeGeometry( new THREE.WireframeGeometry( mesh.geometry ) ); // set colors, maybe\n\n\t\treturn this;\n\n\t}\n\n\tfromLineSegments( lineSegments ) {\n\n\t\tconst geometry = lineSegments.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'LineSegmentsGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t} // set colors, maybe\n\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new THREE.Box3();\n\n\t\t}\n\n\t\tconst start = this.attributes.instanceStart;\n\t\tconst end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( start );\n\n\t\t\t_box.setFromBufferAttribute( end );\n\n\t\t\tthis.boundingBox.union( _box );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new THREE.Sphere();\n\n\t\t}\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tconst start = this.attributes.instanceStart;\n\t\tconst end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\tconst center = this.boundingSphere.center;\n\t\t\tthis.boundingBox.getCenter( center );\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = start.count; i < il; i ++ ) {\n\n\t\t\t\t_vector.fromBufferAttribute( start, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t\t_vector.fromBufferAttribute( end, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() { // todo\n\t}\n\n\tapplyMatrix( matrix ) {\n\n\t\tconsole.warn( 'THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().' );\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n}\n\nLineSegmentsGeometry.prototype.isLineSegmentsGeometry = true;\n\nexport default LineSegmentsGeometry;\n","/**\n * parameters = {\n *  color: <hex>,\n *  linewidth: <float>,\n *  dashed: <boolean>,\n *  dashScale: <float>,\n *  dashSize: <float>,\n *  dashOffset: <float>,\n *  gapSize: <float>,\n *  resolution: <Vector2>, // to be set by renderer\n * }\n */\n\nimport {\n\tShaderLib,\n\tShaderMaterial,\n\tUniformsLib,\n\tUniformsUtils,\n\tVector2\n} from 'three';\n\nconst THREE = window.THREE\n\t? window.THREE // Prefer consumption from global THREE, if exists\n\t: {\n\tShaderLib,\n\tShaderMaterial,\n\tUniformsLib,\n\tUniformsUtils,\n\tVector2\n};\n\nTHREE.UniformsLib.line = {\n\t\tworldUnits: {\n\t\t\tvalue: 1\n\t\t},\n\t\tlinewidth: {\n\t\t\tvalue: 1\n\t\t},\n\t\tresolution: {\n\t\t\tvalue: new THREE.Vector2( 1, 1 )\n\t\t},\n\t\tdashScale: {\n\t\t\tvalue: 1\n\t\t},\n\t\tdashSize: {\n\t\t\tvalue: 1\n\t\t},\n\t\tdashOffset: {\n\t\t\tvalue: 0\n\t\t},\n\t\tgapSize: {\n\t\t\tvalue: 1\n\t\t} // todo FIX - maybe change to totalSize\n\n};\nTHREE.ShaderLib[ 'line' ] = {\n\t\tuniforms: THREE.UniformsUtils.merge( [ THREE.UniformsLib.common, THREE.UniformsLib.fog, THREE.UniformsLib.line ] ),\n\tvertexShader:\n\t/* glsl */\n\t\t`\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 worldPos;\n\t\tvarying vec3 worldStart;\n\t\tvarying vec3 worldEnd;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\tworldStart = start.xyz;\n\t\t\tworldEnd = end.xyz;\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec3 ndcStart = clipStart.xyz / clipStart.w;\n\t\t\tvec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd.xy - ndcStart.xy;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// get the offset direction as perpendicular to the view vector\n\t\t\t\tvec3 worldDir = normalize( end.xyz - start.xyz );\n\t\t\t\tvec3 offset;\n\t\t\t\tif ( position.y < 0.5 ) {\n\n\t\t\t\t\toffset = normalize( cross( start.xyz, worldDir ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\toffset = normalize( cross( end.xyz, worldDir ) );\n\n\t\t\t\t}\n\n\t\t\t\t// sign flip\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\tfloat forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );\n\n\t\t\t\t// don't extend the line if we're rendering dashes because we\n\t\t\t\t// won't be rendering the endcaps\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t// extend the line bounds to encompass  endcaps\n\t\t\t\t\tstart.xyz += - worldDir * linewidth * 0.5;\n\t\t\t\t\tend.xyz += worldDir * linewidth * 0.5;\n\n\t\t\t\t\t// shift the position of the quad so it hugs the forward edge of the line\n\t\t\t\t\toffset.xy -= dir * forwardOffset;\n\t\t\t\t\toffset.z += 0.5;\n\n\t\t\t\t#endif\n\n\t\t\t\t// endcaps\n\t\t\t\tif ( position.y > 1.0 || position.y < 0.0 ) {\n\n\t\t\t\t\toffset.xy += dir * 2.0 * forwardOffset;\n\n\t\t\t\t}\n\n\t\t\t\t// adjust for linewidth\n\t\t\t\toffset *= linewidth * 0.5;\n\n\t\t\t\t// set the world position\n\t\t\t\tworldPos = ( position.y < 0.5 ) ? start : end;\n\t\t\t\tworldPos.xyz += offset;\n\n\t\t\t\t// project the worldpos\n\t\t\t\tvec4 clip = projectionMatrix * worldPos;\n\n\t\t\t\t// shift the depth of the projected points so the line\n\t\t\t\t// segements overlap neatly\n\t\t\t\tvec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n\t\t\t\tclip.z = clipPose.z * clip.w;\n\n\t\t\t#else\n\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\t#endif\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t`,\n\tfragmentShader:\n\t/* glsl */\n\t\t`\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\t\tuniform float linewidth;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\t\tvarying vec4 worldPos;\n\t\tvarying vec3 worldStart;\n\t\tvarying vec3 worldEnd;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\n\t\t\tfloat mua;\n\t\t\tfloat mub;\n\n\t\t\tvec3 p13 = p1 - p3;\n\t\t\tvec3 p43 = p4 - p3;\n\n\t\t\tvec3 p21 = p2 - p1;\n\n\t\t\tfloat d1343 = dot( p13, p43 );\n\t\t\tfloat d4321 = dot( p43, p21 );\n\t\t\tfloat d1321 = dot( p13, p21 );\n\t\t\tfloat d4343 = dot( p43, p43 );\n\t\t\tfloat d2121 = dot( p21, p21 );\n\n\t\t\tfloat denom = d2121 * d4343 - d4321 * d4321;\n\n\t\t\tfloat numer = d1343 * d4321 - d1321 * d4343;\n\n\t\t\tmua = numer / denom;\n\t\t\tmua = clamp( mua, 0.0, 1.0 );\n\t\t\tmub = ( d1343 + d4321 * ( mua ) ) / d4343;\n\t\t\tmub = clamp( mub, 0.0, 1.0 );\n\n\t\t\treturn vec2( mua, mub );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tfloat alpha = opacity;\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// Find the closest points on the view ray and the line segment\n\t\t\t\tvec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n\t\t\t\tvec3 lineDir = worldEnd - worldStart;\n\t\t\t\tvec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\n\t\t\t\tvec3 p1 = worldStart + lineDir * params.x;\n\t\t\t\tvec3 p2 = rayEnd * params.y;\n\t\t\t\tvec3 delta = p1 - p2;\n\t\t\t\tfloat len = length( delta );\n\t\t\t\tfloat norm = len / linewidth;\n\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t#ifdef ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\tfloat dnorm = fwidth( norm );\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tif ( norm > 0.5 ) {\n\n\t\t\t\t\t\t\tdiscard;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#else\n\n\t\t\t\t#ifdef ALPHA_TO_COVERAGE\n\n\t\t\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\tfloat len2 = a * a + b * b;\n\t\t\t\t\tfloat dlen = fwidth( len2 );\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t#else\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, alpha );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t`\n};\n\nclass LineMaterial extends THREE.ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( {\n\t\t\ttype: 'LineMaterial',\n\t\t\tuniforms: THREE.UniformsUtils.clone( THREE.ShaderLib[ 'line' ].uniforms ),\n\t\t\tvertexShader: THREE.ShaderLib[ 'line' ].vertexShader,\n\t\t\tfragmentShader: THREE.ShaderLib[ 'line' ].fragmentShader,\n\t\t\tclipping: true // required for clipping support\n\n\t\t} );\n\t\tObject.defineProperties( this, {\n\t\t\tcolor: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.diffuse.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.diffuse.value = value;\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tworldUnits: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn 'WORLD_UNITS' in this.defines;\n\n\t\t\t\t\t},\n\t\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\t\tif ( value === true ) {\n\n\t\t\t\t\t\t\tthis.defines.WORLD_UNITS = '';\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdelete this.defines.WORLD_UNITS;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tlinewidth: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.linewidth.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.linewidth.value = value;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tdashed: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn Boolean( 'USE_DASH' in this.defines );\n\n\t\t\t\t},\n\n\t\t\t\tset( value ) {\n\n\t\t\t\t\tif ( Boolean( value ) !== Boolean( 'USE_DASH' in this.defines ) ) {\n\n\t\t\t\t\t\tthis.needsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( value === true ) {\n\n\t\t\t\t\t\tthis.defines.USE_DASH = '';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdelete this.defines.USE_DASH;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\t\t\tdashScale: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.dashScale.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.dashScale.value = value;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tdashSize: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.dashSize.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.dashSize.value = value;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tdashOffset: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.dashOffset.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.dashOffset.value = value;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tgapSize: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.gapSize.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.gapSize.value = value;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.opacity.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.opacity.value = value;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tresolution: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.resolution.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.resolution.value.copy( value );\n\n\t\t\t\t}\n\t\t\t},\n\t\t\talphaToCoverage: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn Boolean( 'ALPHA_TO_COVERAGE' in this.defines );\n\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tif ( Boolean( value ) !== Boolean( 'ALPHA_TO_COVERAGE' in this.defines ) ) {\n\n\t\t\t\t\t\tthis.needsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( value === true ) {\n\n\t\t\t\t\t\tthis.defines.ALPHA_TO_COVERAGE = '';\n\t\t\t\t\t\tthis.extensions.derivatives = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdelete this.defines.ALPHA_TO_COVERAGE;\n\t\t\t\t\t\tthis.extensions.derivatives = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nLineMaterial.prototype.isLineMaterial = true;\n\nexport default LineMaterial;\n","import {\n\tBox3,\n\tBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tLine3,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tSphere,\n\tVector3,\n\tVector4\n} from 'three';\n\nconst THREE = window.THREE\n\t? window.THREE // Prefer consumption from global THREE, if exists\n\t: {\n\t\tBox3,\n\t\tBufferGeometry,\n\t\tInstancedInterleavedBuffer,\n\t\tInterleavedBufferAttribute,\n\t\tLine3,\n\t\tMathUtils,\n\t\tMatrix4,\n\t\tMesh,\n\t\tSphere,\n\t\tVector3,\n\t\tVector4\n\t};\n\nimport LineSegmentsGeometry from \"./LineSegmentsGeometry.js\";\nimport LineMaterial from \"./LineMaterial.js\";\n\n// support both modes for backwards threejs compatibility\nvar setAttributeFn = new THREE.BufferGeometry().setAttribute ? 'setAttribute' : 'addAttribute';\n\nconst _start = new THREE.Vector3();\n\nconst _end = new THREE.Vector3();\n\nconst _start4 = new THREE.Vector4();\n\nconst _end4 = new THREE.Vector4();\n\nconst _ssOrigin = new THREE.Vector4();\n\nconst _ssOrigin3 = new THREE.Vector3();\n\nconst _mvMatrix = new THREE.Matrix4();\n\nconst _line = new THREE.Line3();\n\nconst _closestPoint = new THREE.Vector3();\n\nconst _box = new THREE.Box3();\n\nconst _sphere = new THREE.Sphere();\n\nconst _clipToWorldVector = new THREE.Vector4();\n\nclass LineSegments2 extends THREE.Mesh {\n\n\tconstructor( geometry = new LineSegmentsGeometry(), material = new LineMaterial( {\n\t\tcolor: Math.random() * 0xffffff\n\t} ) ) {\n\n\t\tsuper( geometry, material );\n\t\tthis.type = 'LineSegments2';\n\n\t} // for backwards-compatability, but could be a method of LineSegmentsGeometry...\n\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst instanceStart = geometry.attributes.instanceStart;\n\t\tconst instanceEnd = geometry.attributes.instanceEnd;\n\t\tconst lineDistances = new Float32Array( 2 * instanceStart.count );\n\n\t\tfor ( let i = 0, j = 0, l = instanceStart.count; i < l; i ++, j += 2 ) {\n\n\t\t\t_start.fromBufferAttribute( instanceStart, i );\n\n\t\t\t_end.fromBufferAttribute( instanceEnd, i );\n\n\t\t\tlineDistances[ j ] = j === 0 ? 0 : lineDistances[ j - 1 ];\n\t\t\tlineDistances[ j + 1 ] = lineDistances[ j ] + _start.distanceTo( _end );\n\n\t\t}\n\n\t\tconst instanceDistanceBuffer = new THREE.InstancedInterleavedBuffer( lineDistances, 2, 1 ); // d0, d1\n\n\t\tgeometry[setAttributeFn]( 'instanceDistanceStart', new THREE.InterleavedBufferAttribute( instanceDistanceBuffer, 1, 0 ) ); // d0\n\n\t\tgeometry[setAttributeFn]( 'instanceDistanceEnd', new THREE.InterleavedBufferAttribute( instanceDistanceBuffer, 1, 1 ) ); // d1\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2.' );\n\n\t\t}\n\n\t\tconst threshold = raycaster.params.Line2 !== undefined ? raycaster.params.Line2.threshold || 0 : 0;\n\t\tconst ray = raycaster.ray;\n\t\tconst camera = raycaster.camera;\n\t\tconst projectionMatrix = camera.projectionMatrix;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst resolution = material.resolution;\n\t\tconst lineWidth = material.linewidth + threshold;\n\t\tconst instanceStart = geometry.attributes.instanceStart;\n\t\tconst instanceEnd = geometry.attributes.instanceEnd; // camera forward is negative\n\n\t\tconst near = - camera.near; // clip space is [ - 1, 1 ] so multiply by two to get the full\n\t\t// width in clip space\n\n\t\tconst ssMaxWidth = 2.0 * Math.max( lineWidth / resolution.width, lineWidth / resolution.height ); //\n\t\t// check if we intersect the sphere bounds\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\t_sphere.copy( geometry.boundingSphere ).applyMatrix4( matrixWorld );\n\n\t\tconst distanceToSphere = Math.max( camera.near, _sphere.distanceToPoint( ray.origin ) ); // get the w component to scale the world space line width\n\n\t\t_clipToWorldVector.set( 0, 0, - distanceToSphere, 1.0 ).applyMatrix4( camera.projectionMatrix );\n\n\t\t_clipToWorldVector.multiplyScalar( 1.0 / _clipToWorldVector.w );\n\n\t\t_clipToWorldVector.applyMatrix4( camera.projectionMatrixInverse ); // increase the sphere bounds by the worst case line screen space width\n\n\n\t\tconst sphereMargin = Math.abs( ssMaxWidth / _clipToWorldVector.w ) * 0.5;\n\t\t_sphere.radius += sphereMargin;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) {\n\n\t\t\treturn;\n\n\t\t} //\n\t\t// check if we intersect the box bounds\n\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\t_box.copy( geometry.boundingBox ).applyMatrix4( matrixWorld );\n\n\t\tconst distanceToBox = Math.max( camera.near, _box.distanceToPoint( ray.origin ) ); // get the w component to scale the world space line width\n\n\t\t_clipToWorldVector.set( 0, 0, - distanceToBox, 1.0 ).applyMatrix4( camera.projectionMatrix );\n\n\t\t_clipToWorldVector.multiplyScalar( 1.0 / _clipToWorldVector.w );\n\n\t\t_clipToWorldVector.applyMatrix4( camera.projectionMatrixInverse ); // increase the sphere bounds by the worst case line screen space width\n\n\n\t\tconst boxMargin = Math.abs( ssMaxWidth / _clipToWorldVector.w ) * 0.5;\n\t\t_box.max.x += boxMargin;\n\t\t_box.max.y += boxMargin;\n\t\t_box.max.z += boxMargin;\n\t\t_box.min.x -= boxMargin;\n\t\t_box.min.y -= boxMargin;\n\t\t_box.min.z -= boxMargin;\n\n\t\tif ( raycaster.ray.intersectsBox( _box ) === false ) {\n\n\t\t\treturn;\n\n\t\t} //\n\t\t// pick a point 1 unit out along the ray to avoid the ray origin\n\t\t// sitting at the camera origin which will cause \"w\" to be 0 when\n\t\t// applying the projection matrix.\n\n\n\t\tray.at( 1, _ssOrigin ); // ndc space [ - 1.0, 1.0 ]\n\n\t\t_ssOrigin.w = 1;\n\n\t\t_ssOrigin.applyMatrix4( camera.matrixWorldInverse );\n\n\t\t_ssOrigin.applyMatrix4( projectionMatrix );\n\n\t\t_ssOrigin.multiplyScalar( 1 / _ssOrigin.w ); // screen space\n\n\n\t\t_ssOrigin.x *= resolution.x / 2;\n\t\t_ssOrigin.y *= resolution.y / 2;\n\t\t_ssOrigin.z = 0;\n\n\t\t_ssOrigin3.copy( _ssOrigin );\n\n\t\t_mvMatrix.multiplyMatrices( camera.matrixWorldInverse, matrixWorld );\n\n\t\tfor ( let i = 0, l = instanceStart.count; i < l; i ++ ) {\n\n\t\t\t_start4.fromBufferAttribute( instanceStart, i );\n\n\t\t\t_end4.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t_start4.w = 1;\n\t\t\t_end4.w = 1; // camera space\n\n\t\t\t_start4.applyMatrix4( _mvMatrix );\n\n\t\t\t_end4.applyMatrix4( _mvMatrix ); // skip the segment if it's entirely behind the camera\n\n\n\t\t\tvar isBehindCameraNear = _start4.z > near && _end4.z > near;\n\n\t\t\tif ( isBehindCameraNear ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t} // trim the segment if it extends behind camera near\n\n\n\t\t\tif ( _start4.z > near ) {\n\n\t\t\t\tconst deltaDist = _start4.z - _end4.z;\n\t\t\t\tconst t = ( _start4.z - near ) / deltaDist;\n\n\t\t\t\t_start4.lerp( _end4, t );\n\n\t\t\t} else if ( _end4.z > near ) {\n\n\t\t\t\tconst deltaDist = _end4.z - _start4.z;\n\t\t\t\tconst t = ( _end4.z - near ) / deltaDist;\n\n\t\t\t\t_end4.lerp( _start4, t );\n\n\t\t\t} // clip space\n\n\n\t\t\t_start4.applyMatrix4( projectionMatrix );\n\n\t\t\t_end4.applyMatrix4( projectionMatrix ); // ndc space [ - 1.0, 1.0 ]\n\n\n\t\t\t_start4.multiplyScalar( 1 / _start4.w );\n\n\t\t\t_end4.multiplyScalar( 1 / _end4.w ); // screen space\n\n\n\t\t\t_start4.x *= resolution.x / 2;\n\t\t\t_start4.y *= resolution.y / 2;\n\t\t\t_end4.x *= resolution.x / 2;\n\t\t\t_end4.y *= resolution.y / 2; // create 2d segment\n\n\t\t\t_line.start.copy( _start4 );\n\n\t\t\t_line.start.z = 0;\n\n\t\t\t_line.end.copy( _end4 );\n\n\t\t\t_line.end.z = 0; // get closest point on ray to segment\n\n\t\t\tconst param = _line.closestPointToPointParameter( _ssOrigin3, true );\n\n\t\t\t_line.at( param, _closestPoint ); // check if the intersection point is within clip space\n\n\n\t\t\tconst zPos = THREE.MathUtils.lerp( _start4.z, _end4.z, param );\n\t\t\tconst isInClipSpace = zPos >= - 1 && zPos <= 1;\n\t\t\tconst isInside = _ssOrigin3.distanceTo( _closestPoint ) < lineWidth * 0.5;\n\n\t\t\tif ( isInClipSpace && isInside ) {\n\n\t\t\t\t_line.start.fromBufferAttribute( instanceStart, i );\n\n\t\t\t\t_line.end.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\t_line.start.applyMatrix4( matrixWorld );\n\n\t\t\t\t_line.end.applyMatrix4( matrixWorld );\n\n\t\t\t\tconst pointOnLine = new THREE.Vector3();\n\t\t\t\tconst point = new THREE.Vector3();\n\t\t\t\tray.distanceSqToSegment( _line.start, _line.end, point, pointOnLine );\n\t\t\t\tintersects.push( {\n\t\t\t\t\tpoint: point,\n\t\t\t\t\tpointOnLine: pointOnLine,\n\t\t\t\t\tdistance: ray.origin.distanceTo( point ),\n\t\t\t\t\tobject: this,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: i,\n\t\t\t\t\tuv: null,\n\t\t\t\t\tuv2: null\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nLineSegments2.prototype.LineSegments2 = true;\n\nexport default LineSegments2;","import LineSegmentsGeometry from \"./LineSegmentsGeometry.js\";\n\nclass LineGeometry extends LineSegmentsGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis.type = 'LineGeometry';\n\n\t}\n\n\tsetPositions( array ) {\n\n\t\t// converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n\t\tvar length = array.length - 3;\n\t\tvar points = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tpoints[ 2 * i ] = array[ i ];\n\t\t\tpoints[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tpoints[ 2 * i + 2 ] = array[ i + 2 ];\n\t\t\tpoints[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tpoints[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tpoints[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tsuper.setPositions( points );\n\t\treturn this;\n\n\t}\n\n\tsetColors( array ) {\n\n\t\t// converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n\t\tvar length = array.length - 3;\n\t\tvar colors = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tcolors[ 2 * i ] = array[ i ];\n\t\t\tcolors[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tcolors[ 2 * i + 2 ] = array[ i + 2 ];\n\t\t\tcolors[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tcolors[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tcolors[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tsuper.setColors( colors );\n\t\treturn this;\n\n\t}\n\n\tfromLine( line ) {\n\n\t\tvar geometry = line.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tconsole.error( 'THREE.LineGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t} // set colors, maybe\n\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineGeometry.prototype.isLineGeometry = true;\n\nexport default LineGeometry;\n","import LineSegments2 from \"./LineSegments2.js\";\nimport LineGeometry from \"./LineGeometry.js\";\nimport LineMaterial from \"./LineMaterial.js\";\n\nclass Line2 extends LineSegments2 {\n\n\tconstructor( geometry = new LineGeometry(), material = new LineMaterial( {\n\t\tcolor: Math.random() * 0xffffff\n\t} ) ) {\n\n\t\tsuper( geometry, material );\n\t\tthis.type = 'Line2';\n\n\t}\n\n}\n\nLine2.prototype.isLine2 = true;\n\nexport default Line2;\n"],"names":["THREE","window","Box3","BufferGeometry","Float32BufferAttribute","InstancedBufferGeometry","InstancedInterleavedBuffer","InterleavedBufferAttribute","Sphere","Vector3","WireframeGeometry","setAttributeFn","setAttribute","_box","_vector","LineSegmentsGeometry","constructor","type","positions","uvs","index","setIndex","applyMatrix4","matrix","start","attributes","instanceStart","end","instanceEnd","undefined","needsUpdate","boundingBox","computeBoundingBox","boundingSphere","computeBoundingSphere","setPositions","array","lineSegments","Float32Array","Array","isArray","instanceBuffer","setColors","colors","instanceColorBuffer","fromWireframeGeometry","geometry","position","fromEdgesGeometry","fromMesh","mesh","fromLineSegments","isGeometry","console","error","isBufferGeometry","setFromBufferAttribute","union","center","getCenter","maxRadiusSq","i","il","count","fromBufferAttribute","Math","max","distanceToSquared","radius","sqrt","isNaN","toJSON","applyMatrix","warn","prototype","isLineSegmentsGeometry","ShaderLib","ShaderMaterial","UniformsLib","UniformsUtils","Vector2","line","worldUnits","value","linewidth","resolution","dashScale","dashSize","dashOffset","gapSize","uniforms","merge","common","fog","vertexShader","fragmentShader","LineMaterial","parameters","clone","clipping","Object","defineProperties","color","enumerable","get","diffuse","set","defines","WORLD_UNITS","dashed","Boolean","USE_DASH","opacity","copy","alphaToCoverage","ALPHA_TO_COVERAGE","extensions","derivatives","setValues","isLineMaterial","Line3","MathUtils","Matrix4","Mesh","Vector4","_start","_end","_start4","_end4","_ssOrigin","_ssOrigin3","_mvMatrix","_line","_closestPoint","_sphere","_clipToWorldVector","LineSegments2","material","random","computeLineDistances","lineDistances","j","l","distanceTo","instanceDistanceBuffer","raycast","raycaster","intersects","camera","threshold","params","Line2","ray","projectionMatrix","matrixWorld","lineWidth","near","ssMaxWidth","width","height","distanceToSphere","distanceToPoint","origin","multiplyScalar","w","projectionMatrixInverse","sphereMargin","abs","intersectsSphere","distanceToBox","boxMargin","x","y","z","min","intersectsBox","at","matrixWorldInverse","multiplyMatrices","isBehindCameraNear","deltaDist","t","lerp","param","closestPointToPointParameter","zPos","isInClipSpace","isInside","pointOnLine","point","distanceSqToSegment","push","distance","object","face","faceIndex","uv","uv2","LineGeometry","length","points","fromLine","isLineGeometry","isLine2"],"mappings":"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"}